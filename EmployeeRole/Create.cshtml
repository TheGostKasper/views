@model AMS.Models.EmployeeRole

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<header class="m-header">
    <a class="btn btn-secondary btn--icon-text waves-effect" href="~/EmployeeRole/"><span><i class="zmdi zmdi-arrow-back"></i> Back</span></a>
    <h2 class="m-title">Create</h2>
</header>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EmpId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var listItems = new List<System.Web.UI.WebControls.ListItem>();
                    foreach (var item in ViewData["EmployeesLookup"] as IEnumerable<AMS.Models.Employee>)
                    {
                        var i = new System.Web.UI.WebControls.ListItem();
                        i.Text = item.Name;
                        i.Value = item.Id.ToString();
                        listItems.Add(i);
                    }
                }
                @Html.DropDownListFor(model => model.EmpId, new SelectList(listItems, "Value", "Text"), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    listItems = new List<System.Web.UI.WebControls.ListItem>();
                    foreach (var item in ViewData["RolesLookup"] as IEnumerable<AMS.Models.Role>)
                    {
                        var i = new System.Web.UI.WebControls.ListItem();
                        i.Text = item.Name;
                        i.Value = item.Id.ToString();
                        listItems.Add(i);
                    }
                }
                @Html.DropDownListFor(model => model.RoleId, new SelectList(listItems, "Value", "Text"), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                 <button type="submit" class="btn btn-outline-primary waves-effect">Create</button>
            </div>
        </div>
    </div>
}

<div>
   
</div>
