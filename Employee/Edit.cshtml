@model AMS.Models.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var listItems = new List<System.Web.UI.WebControls.ListItem>();
    foreach (var item in ViewData["AccountStateLookup"] as IEnumerable<AMS.Models.AccountState>)
    {
        var i = new System.Web.UI.WebControls.ListItem();
        i.Text = item.State;
        i.Value = item.Id.ToString();
        listItems.Add(i);
    }
    var arr = ViewData["EmpRoles"] as IEnumerable<AMS.Models.EmployeeRole>;
}
<header class="m-header">
    <a class="btn btn-secondary btn--icon waves-effect" href="~/Employee"><span><i class="zmdi zmdi-arrow-back"></i></span></a>
    <h2 class="m-title">Edit</h2>
</header>
<div class="content_inner">
    <div class="card">
        <div class="card-block">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            <i class="form-group__bar"></i>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", type = "phone" } })
                            <i class="form-group__bar"></i>
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                            <i class="form-group__bar"></i>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            <i class="form-group__bar"></i>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            <i class="form-group__bar"></i>
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                            @Html.DropDownListFor(model => model.Status, new SelectList(listItems, "Value", "Text"), "--Select--", new { @class = "form-control" })                            <i class="form-group__bar"></i>
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                  

                    @if (HttpContext.Current.User.IsInRole("admin"))
                    {
                        <div class="col-md-8">
                            <div class="form-group">
                                <label class="control-label">Roles</label>
                                <div class="roles">
                                    @foreach (var item in ViewData["Roles"] as IEnumerable<AMS.Models.Role>)
                                    {
                                        <label class="custom-control custom-checkbox">
                                            @if (arr.FirstOrDefault(e => e.RoleId == item.Id) != null)
                                            {
                                                <input type="checkbox" class="custom-control-input" name="@item.Name" value="@item.Id" checked />
                                            }
                                            else
                                            {
                                                <input type="checkbox" class="custom-control-input" name="@item.Name" value="@item.Id" />
                                            }
                                            <span class="custom-control-indicator"></span>
                                            <span class="custom-control-description">@item.Name</span>
                                        </label>

                                    }
                                </div>
                                
                            </div>
                        </div>
                    }

                </div>
                <center>
                    <button type="submit" class="btn btn-outline-primary waves-effect">Save</button>
                </center>
            }

        </div>
    </div>
</div>


@section scripts{
    <script>
        $('input[type=checkbox]').on('change', function () {
            var url = window.location.pathname.split("/");
            var empId = url[url.length - 1]
            $.post("@Url.Action("UpdateEmployeeRole")", { empId: empId, roleId: $(this).val() }).then(
                function () {
                }, function () {
                })
        })
    </script>

}
